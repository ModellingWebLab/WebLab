# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-11-20 11:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0014_entity_is_fitting_spec'),
        ('repocache', '0010_cachedentityversion_parsed_ok'),
    ]

    operations = [
        migrations.CreateModel(
            name='CachedModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.ModelEntity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedModelTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='repocache.CachedModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedModelVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public'), ('moderated', 'Moderated')], help_text='Public = anyone can view<br />Private = only you can view', max_length=16)),
                ('sha', models.CharField(max_length=40)),
                ('timestamp', models.DateTimeField()),
                ('parsed_ok', models.BooleanField(default=False, help_text='Whether this entity version has been verified as syntactically correct')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='repocache.CachedModel')),
            ],
            options={
                'ordering': ['-timestamp', '-pk'],
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.ProtocolEntity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedProtocolTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='repocache.CachedProtocol')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachedProtocolVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public'), ('moderated', 'Moderated')], help_text='Public = anyone can view<br />Private = only you can view', max_length=16)),
                ('sha', models.CharField(max_length=40)),
                ('timestamp', models.DateTimeField()),
                ('parsed_ok', models.BooleanField(default=False, help_text='Whether this entity version has been verified as syntactically correct')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='repocache.CachedProtocol')),
            ],
            options={
                'ordering': ['-timestamp', '-pk'],
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cachedprotocoltag',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='repocache.CachedProtocolVersion'),
        ),
        migrations.AddField(
            model_name='cachedmodeltag',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='repocache.CachedModelVersion'),
        ),
        migrations.AlterUniqueTogether(
            name='cachedprotocolversion',
            unique_together=set([('entity', 'sha')]),
        ),
        migrations.AlterUniqueTogether(
            name='cachedprotocoltag',
            unique_together=set([('entity', 'tag')]),
        ),
        migrations.AlterUniqueTogether(
            name='cachedmodelversion',
            unique_together=set([('entity', 'sha')]),
        ),
        migrations.AlterUniqueTogether(
            name='cachedmodeltag',
            unique_together=set([('entity', 'tag')]),
        ),
    ]
